@charset "UTF-8";
:root {
  --foundry-dark-gray: rgba(52, 52, 52, 0.85);
  --foundry-purple-background-hover: rgba(60, 0, 120, 0.5);
  --foundry-purple-shadow-hover: #9b8dff;
  --foundry-purple-border: #3b1893;
  --foundry-purple-background: rgba(30, 0, 60, 0.5);
  --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36) inset;
  --color-secondary-darkest: hsl(221deg, 98%, 20%);
  --color-secondary-800: hsl(215deg, 98%, 30%);
  --color-secondary-700: hsl(210deg, 98%, 40%);
  --color-secondary-600: hsl(205deg, 98%, 52%);
  --color-secondary-base: hsl(199deg, 98%, 63%);
  --color-secondary-400: hsl(190deg, 99%, 70%);
  --color-secondary-300: hsl(185deg, 100%, 80%);
  --color-secondary-lightest: hsl(175deg, 100%, 90%);
  --color-primary-darkest: hsl(240deg, 58%, 28%);
  --color-primary-800: hsl(240deg, 58%, 30%);
  --color-primary-700: hsl(240deg, 58%, 40%);
  --color-primary-600: hsl(240deg, 60%, 50%);
  --color-primary-base: hsl(240deg, 60%, 60%);
  --color-primary-400: hsl(240deg, 60%, 68%);
  --color-primary-300: hsl(240deg, 65%, 75%);
  --color-primary-200: hsl(240deg, 75%, 85%);
  --color-primary-lightest: hsl(240deg, 86%, 92%);
  --color-deep-purple-darkest: hsl(269deg, 100%, 8%);
  --color-deep-purple-700: hsl(269deg, 100%, 18%);
  --color-deep-purple-600: hsl(269deg, 100%, 28%);
  --color-deep-purple-base: hsl(269deg, 100%, 38%);
  --color-neutral-darkest: hsl(240deg, 17%, 20%);
  --color-neutral-700: hsl(240deg, 17%, 30%);
  --color-neutral-base: hsl(240deg, 12%, 50%);
  --color-neutral-300: hsl(240deg, 17%, 70%);
  --color-neutral-lightest: hsl(240deg, 17%, 90%);
  --color-glass-no-blur: hsla(0deg, 0%, 44%, 0.478);
  --color-glass-blur: hsla(0deg, 0%, 44%, 0.267);
  --color-glass-border: hsla(0deg, 0%, 100%, 0.198);
  --color-glass-no-blur-dark: hsla(240deg, 11%, 14%, 0.769);
  --color-glass-blur-dark: hsla(240deg, 11%, 14%, 0.161);
  --color-glass-border-dark: hsla(240deg, 10%, 40%, 0.568);
  --color-danger-dark: hsl(0deg, 89%, 20%);
  --color-danger-base: hsl(0deg, 59%, 50%);
  --color-danger-light: hsl(0deg, 99%, 70%);
  --color-warning-dark: hsl(35deg, 100%, 30%);
  --color-warning-base: hsl(35deg, 80%, 50%);
  --color-warning-light: hsl(35deg, 100%, 65%);
  --color-success-dark: hsl(100deg, 100%, 30%);
  --color-success-base: hsl(100deg, 100%, 50%);
  --color-success-light: hsl(100deg, 100%, 70%);
  --color-info-dark: hsl(200deg, 100%, 25%);
  --color-info-base: hsl(200deg, 60%, 40%);
  --color-info-light: hsl(200deg, 80%, 60%);
  --space-small: 1rem;
  --space-medium: 2rem;
  --space-large: 3rem;
}
:root body.pink {
  background-color: #dc51ac;
}
:root body.red {
  background-color: #d64651;
}
:root body.orange {
  background-color: #e55937;
}

.blank-button {
  border: none;
  background: transparent;
  margin: unset;
  padding: unset;
}

@-webkit-keyframes fade {
  from {
    opacity: 0%;
  }
  to {
    opacity: 100%;
  }
}

@keyframes fade {
  from {
    opacity: 0%;
  }
  to {
    opacity: 100%;
  }
}
@-webkit-keyframes fadeOut {
  from {
    opacity: 100%;
  }
  to {
    opacity: 0%;
  }
}
@keyframes fadeOut {
  from {
    opacity: 100%;
  }
  to {
    opacity: 0%;
  }
}
:root {
  --bg-color-hover: var(--color-border-dark-primary);
  --bg-color: hsla(0, 0%, 20%, 0.9);
  --bg-color-toggle: var(--foundry-purple-background);
  --bg-color-toggle-hover: var(--foundry-purple-background-hover);
  --border-color-toggle: var(--foundry-purple-border);
  --shadow-color-toggle-hover: var(--foundry-purple-shadow-hover);
  --color-text-primary: var(--color-text-dark-primary);
  --color-text-secondary: var(--color-text-light-0);
  --color-text-secondary-hover: var(--color-text-light-highlight);
  --shadow-color: var(--color-shadow-dark);
  --shadow-color-hover: var(--color-shadow-highlight);
  --border-color: var(--color-border-dark);
  --border-color-hover: var(--color-border-highlight);
  --border-color-hover-alt: var(--color-border-highlight-alt);
  --accent-color-1: var(--foundry-purple-shadow-hover, #9b8dff);
  --accent-color-2: var(--color-border-highlight);
  --color-accent: var(--foundry-purple-background);
}

.popover {
  position: absolute;
  border-top: 4px solid var(--JTCS-accent-color);
  padding: var(--padding-small);
  background-color: var(--bg-color);
  color: var(--color-text-light-0);
  top: 100%;
  min-width: -webkit-max-content;
  min-width: -moz-max-content;
  min-width: max-content;
  box-shadow: var(--box-shadow);
}
.popover select {
  color: var(--color-text-light-0);
}
.popover input[type=text] {
  color: var(--color-text-dark-primary, black) !important;
}
.popover[data-variant=over] {
  bottom: 100%;
}

.fill-parent {
  width: 100%;
  height: 100%;
}

.reset-margin, .item-menu hr.list-divider {
  margin: 0;
}

.reset-padding {
  padding: 0;
}

.full-parent-height {
  height: 100%;
}

.flow > * + * {
  margin-top: var(--flow-space, 1em);
}

.img-button {
  background: none;
  background-color: transparent;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
.img-button img {
  max-width: 3rem;
}
.img-button.framed {
  position: relative;
}
.img-button.framed img {
  -webkit-clip-path: circle(50%);
          clip-path: circle(50%);
}
.img-button.framed:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: url("/modules/hud-and-trackers/images/Button Badges/Frames & Borders/circle-frame.webp");
}

.danger {
  background-color: var(--color-danger-light);
  color: white;
}

.danger-text {
  color: var(--color-danger-light);
}

.toggle,
.toggle.active {
  --bg-color: var(--bg-color-toggle);
  --shadow-color-hover: var(--shadow-color-toggle-hover);
  --border-color-hover: var(--border-color-toggle);
}
.toggle:focus,
.toggle.active:focus {
  --color-shadow-primary: #3a00ae;
}

.button-container {
  position: relative;
  list-style-type: none;
}
.button-container .nested-buttons {
  display: flex;
  position: absolute;
  top: 0;
  left: 100%;
}
.button-container .nested-buttons button {
  white-space: nowrap;
}

.floating-control {
  color: var(--color-text-secondary);
  background-color: var(--bg-color);
  box-shadow: 0 0 10px var(--shadow-color);
  border: 1px solid var(--border-color);
}
.floating-control i {
  margin: 0;
}
.floating-control:hover, .floating-control.active {
  cursor: pointer;
  box-shadow: 0 0 10px var(--shadow-color-hover);
  border: 1px solid var(--border-color-hover);
  color: var(--color-text-secondary-hover);
}

.fade-to-hidden {
  opacity: 0%;
  transition: opacity 500ms ease-out;
}

.hidden, .input-span[data-variant=visible-tick] input[type=radio],
.input-span[data-variant=visible-tick] input[type=checkbox], input:is([type=radio], [type=checkbox]).hidden-input {
  transform: scale(0);
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

input:is([type=radio], [type=checkbox]).hidden-input + label {
  transform: scale(1);
  color: var(--color-text-secondary);
  background-color: var(--bg-color);
  box-shadow: 0 0 10px transparent;
  border: 1px solid var(--border-color);
  padding: 0.5rem 0.5rem;
  overflow: visible;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  width: -webkit-max-content;
  width: -moz-max-content;
  width: max-content;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background-color 150ms ease-out transform 150ms ease-out;
}
input:is([type=radio], [type=checkbox]).hidden-input + label:hover {
  cursor: pointer;
  border: 1px solid var(--border-color-hover);
  color: var(--color-text-secondary-hover);
  box-shadow: 0 0 10px var(--shadow-color-hover);
}
input:is([type=radio], [type=checkbox]).hidden-input:checked + label {
  transform: scale(1.04);
  z-index: 1;
  color: var(--color-text-secondary-hover);
  box-shadow: 0px 0px 10px var(--shadow-color-hover);
  border: 1px solid var(--color-border-highlight-alt);
  transition: background-color 250ms ease-out;
}
input:is([type=radio], [type=checkbox]).hidden-input:checked + label:hover {
  color: var(--shadow-color-hover);
}
input:is([type=radio], [type=checkbox]).hidden-input:checked + label .tooltip {
  box-shadow: 0px 0px 10px var(--shadow-color-hover);
  border: 1px solid var(--color-border-highlight-alt);
}

.minimize {
  transform: scaleY(0);
  opacity: 0;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  pointer-events: auto;
  display: flex;
  flex-direction: column;
  transform-origin: top center;
  transition: transform 100ms ease-out, opacity 100ms ease-out;
}

.input-span {
  --bg-color: var(--accent-color-1);
  --border-color: var(--accent-color-1);
  display: inline-flex;
}
.input-span input:disabled + label {
  opacity: 50%;
}
.input-span[data-variant=visible-tick] input[type=radio] + label,
.input-span[data-variant=visible-tick] input[type=checkbox] + label {
  --border-color: var(--foundry-purple-shadow-hover);
  background-color: transparent;
  color: var(--color-text-dark-primary);
  transition: color 200ms ease-out, border-color 200ms ease-out, background-color 200ms ease-out;
}
.input-span[data-variant=visible-tick] input[type=radio] + label:hover,
.input-span[data-variant=visible-tick] input[type=checkbox] + label:hover {
  --bg-color: var(--foundry-purple-shadow-hover);
}
.input-span[data-variant=visible-tick] input[type=radio] + label .tick-circle,
.input-span[data-variant=visible-tick] input[type=radio] + label .tick-box,
.input-span[data-variant=visible-tick] input[type=checkbox] + label .tick-circle,
.input-span[data-variant=visible-tick] input[type=checkbox] + label .tick-box {
  border: 1px solid var(--border-color);
  display: inline-flex;
  width: 1rem;
  height: 1rem;
  background-color: white;
}
.input-span[data-variant=visible-tick] input[type=radio] + label .tick-circle,
.input-span[data-variant=visible-tick] input[type=checkbox] + label .tick-circle {
  border-radius: 50%;
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label {
  --bg-color: var(--foundry-purple-border);
  border: 2px solid var(--border-color);
  transition: color 200ms ease-out, background-color 200ms ease-out, border-color 200ms ease-out;
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label:hover,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label:hover {
  --border-color: var(--foundry-purple-shadow-hover);
  --text-color: var(--foundry-purple-shadow-hover);
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-circle,
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-box,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-circle,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-box {
  position: relative;
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-circle:after,
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-box:after,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-circle:after,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-box:after {
  position: absolute;
  content: "";
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-circle:after,
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-box:after,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-circle:after,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-box:after {
  width: 0.5rem;
  height: 0.5rem;
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-circle:after,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-circle:after {
  border-radius: 50%;
  background-color: var(--bg-color);
}
.input-span[data-variant=visible-tick] input[type=radio]:checked + label .tick-box:after,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label .tick-box:after {
  content: "✓";
  color: var(--bg-color);
  top: unset;
}

.inline-notification {
  display: inline-flex;
}
.inline-notification[data-variant=info] {
  color: var(--color-info-dark);
  background-color: var(--color-info-light);
}
.inline-notification[data-variant=info] .icon-span i {
  color: var(--color-info-dark);
  margin-right: 0.25rem;
}
.inline-notification[data-variant=warning] {
  color: var(--color-warning-dark);
  background-color: var(--color-warning-light);
}
.inline-notification[data-variant=warning] .icon-span i {
  color: var(--color-warning-dark);
  margin-right: 0.25rem;
}
.inline-notification[data-variant=danger] {
  color: var(--color-danger-dark);
  background-color: var(--color-danger-light);
}
.inline-notification[data-variant=danger] .icon-span i {
  color: var(--color-danger-dark);
  margin-right: 0.25rem;
}
.inline-notification[data-variant=success] {
  color: var(--color-success-dark);
  background-color: var(--color-success-light);
}
.inline-notification[data-variant=success] .icon-span i {
  color: var(--color-success-dark);
  margin-right: 0.25rem;
}

input[type=radio]:checked.accent-input {
  --accent-color: var(--accent-color-1);
  accent-color: var(--accent-color);
  filter: unset;
  -webkit-filter: unset;
}

.fit-content-width {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}

.hover-reveal {
  position: relative;
}
.hover-reveal > .hover-reveal--child {
  opacity: 0;
  transition: opacity 250ms ease-in;
}
.hover-reveal:hover .hover-reveal--child {
  opacity: 100%;
}

.hover-reveal-right {
  position: relative;
}
.hover-reveal-right:hover .hover-reveal-right-child {
  opacity: 100%;
}
.hover-reveal-right-child {
  position: absolute;
  opacity: 0;
  left: 100%;
  top: 0;
}

.hover-reveal-up {
  position: relative;
}
.hover-reveal-up:hover .hover-reveal-up-child, .hover-reveal-up.open .hover-reveal-up-child {
  opacity: 1;
}
.hover-reveal-up-child {
  position: absolute;
  bottom: 100%;
  left: 0;
  transform-origin: bottom center;
  opacity: 0;
  transition: opacity 150ms ease-out backdrop-filter 150ms ease-out;
}

fieldset.toggle-button-group {
  max-width: -webkit-fit-content;
  max-width: -moz-fit-content;
  max-width: fit-content;
  box-shadow: var(--box-shadow);
  pointer-events: auto;
  display: flex;
  flex-direction: row;
  border: none;
  color: currentColor;
  padding: 0rem 0rem;
  min-width: 50%;
}
fieldset.toggle-button-group * {
  pointer-events: auto;
}
fieldset.toggle-button-group legend {
  background-color: inherit;
  padding: 0.5rem;
}
fieldset.toggle-button-group label:first-of-type {
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
}
fieldset.toggle-button-group label:last-of-type {
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
}

.full-width {
  width: 100%;
}

.interactive {
  cursor: pointer;
}

.fade {
  background: rgba(255, 255, 255, var(--journal-fade, 50%)) !important;
}
.fade[data-fade-all] {
  opacity: var(--journal-fade, 50%);
}

.padding-small {
  padding: 0.25rem 0.5rem;
}

.padding-medium {
  padding: 0.5rem 1rem;
}

.padding-large, #JTCS-custom-dialog .dialog-content {
  padding: 1rem 1.5rem;
}

.padding-none {
  padding: 0;
}

.margin-none {
  margin: 0;
}

button {
  cursor: pointer;
}

button.icon-button {
  height: 0;
  padding: 0;
  margin: 0;
  border: none;
  background: none;
  background-color: transparent;
  width: 35%;
  padding-bottom: 35%;
  position: relative;
}
button.icon-button i {
  pointer-events: none;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
button.icon-button[data-variant=small] {
  width: 5%;
  padding-bottom: 5%;
}
button.icon-button.active {
  background-color: var(--JTCS-accent-color);
  border: 1px solid rgba(255, 255, 255, 0.568627451);
  box-shadow: 0px 0px 8px 2px var(--JTCS-accent-color);
  outline: 0px solid white;
  outline-offset: 2px;
  transition: outline 120ms ease-in, outline-offset 150ms ease-in;
}
button.icon-button.active:hover, button.icon-button.active:focus {
  outline: 1px solid white;
  outline-offset: 0px;
  transition: outline 120ms ease-out, outline-offset 120ms ease-out;
}

.hover-text-color:hover {
  color: var(--color-accent);
}

.bg-fill, .input-span[data-variant=visible-tick] input[type=radio]:checked + label,
.input-span[data-variant=visible-tick] input[type=checkbox]:checked + label {
  background-color: var(--bg-color);
  color: var(--text-color);
}

.bg-ghost {
  background-color: transparent;
  border: 2px solid var(--border-color);
  color: var(--text-color);
}

.bg-dark {
  background-color: var(--bg-color);
  color: var(--color-text-secondary);
}

.bg-primary {
  background-color: var(--bg-color);
}

.bg-hover {
  background-color: var(--bg-color-hover);
}

.bg-hover-toggle {
  background-color: var(--bg-color-toggle-hover);
}

.bg-none {
  background: none;
  background-color: transparent;
}

.bg-neutral-base {
  background-color: var(--color-neutral-base);
}

.bg-neutral-darkest {
  background-color: var(--color-neutral-darkest);
}

.bg-neutral-lightest {
  background-color: var(--color-neutral-lightest);
}

.bg-glass {
  transition: background-color 100ms ease-in backdrop-filter 100ms ease-in;
  background-color: var(--color-glass-no-blur);
  border: 1px solid var(--color-glass-border);
}
@supports ((-webkit-backdrop-filter: blur(12px)) or (backdrop-filter: blur(12px))) {
  .bg-glass {
    background-color: var(--color-glass-blur);
    -webkit-backdrop-filter: blur(12px) opacity(1);
            backdrop-filter: blur(12px) opacity(1);
  }
}

.hover-grow {
  transition: transform 150ms ease-in;
}
.hover-grow:hover {
  transform: scale(1.2);
}

.hover-bg-primary {
  transition: background-color 150ms ease-in;
}
.hover-bg-primary:hover {
  background-color: var(--color-secondary-base);
}

.hover-bg-secondary {
  transition: background-color 150ms ease-in;
}
.hover-bg-secondary:hover {
  background-color: var(--color-secondary-base);
}

.hover-bg-removable {
  transition: background-color 150ms ease-in;
}
.hover-bg-removable:hover {
  background-color: var(--color-danger-base);
}

.hover-bg-none:hover {
  background: none;
  background-color: transparent;
}

.hover-bg-dynamic, .unlinked-tiles-list li, .item-menu li, .input-span[data-variant=visible-tick] input[type=radio] + label,
.input-span[data-variant=visible-tick] input[type=checkbox] + label {
  transition: background-color 150ms ease-in;
}
.hover-bg-dynamic:hover, .unlinked-tiles-list li:hover, .item-menu li:hover, .input-span[data-variant=visible-tick] input[type=radio] + label:hover,
.input-span[data-variant=visible-tick] input[type=checkbox] + label:hover {
  background-color: var(--bg-color);
}

.hover-border {
  border: 2px solid transparent;
  transition: border-color 150ms ease-in;
}
.hover-border:hover {
  border-color: var(--accent-color);
  transition: border-color 150ms ease-out;
}

.focus-border {
  outline: 3px solid transparent;
  transition: outline-color 150ms ease-in;
}
.focus-border:focus, .focus-border:focus-within {
  outline-color: var(--accent-color);
  transition: outline-color 150ms ease-out;
}

.focus-bg-none:focus {
  background: none;
  background-color: transparent;
}

.hover-disabled:disabled {
  cursor: not-allowed;
}

.brighten-on-open.open {
  filter: brightness(1.2);
}

.glow-on-open.open {
  filter: drop-shadow(0 0 0.75rem crimson);
}

.child-glow-on-open.open > img {
  filter: drop-shadow(0 0 0.75rem crimson);
}

.drop-shadow {
  filter: drop-shadow(2px 2px 3px rgba(0, 0, 0, 0.35));
}

.max-height-full-parent {
  max-height: 100%;
}

.text-shadow {
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

.shadow-none {
  box-shadow: var(--shadow-none);
}

.shadow-lowest {
  box-shadow: var(--shadow-lowest);
}

.shadow-base {
  box-shadow: var(--shadow-base);
}

.shadow-highest {
  box-shadow: var(--shadow-highest);
}

.shadow-circle {
  filter: drop-shadow(2px 4px 6px black);
  transition: filter 150ms ease-in;
}

.shadow-inset {
  box-shadow: var(--box-shadow-inset);
}

.overflow-auto {
  overflow: auto;
}
.overflow-auto-x {
  overflow-x: auto;
}
.overflow-auto-y {
  overflow-y: auto;
}
.overflow-scroll {
  overflow: scroll;
}
.overflow-scroll-x {
  overflow-x: scroll;
}
.overflow-scroll-y {
  overflow-y: scroll;
}
.overflow-hidden, .item-menu {
  overflow: hidden;
}
.overflow-hidden-x {
  overflow-x: hidden;
}
.overflow-hidden-y {
  overflow-y: hidden;
}

.overflow-auto-y {
  overflow-y: auto;
}

.scroll-y {
  overflow-y: scroll;
}

.scroll-x {
  overflow-x: scroll;
}

.hidden-overflow-y {
  overflow-y: hidden;
}

.hidden-overflow-x {
  overflow-x: hidden;
}

.border-color-shadow {
  --border-color: rgba(0, 0, 0, 0.25);
}

.border-block {
  border-block: 2px solid var(--border-color);
}

.border-inline {
  border-inline: 2px solid var(--border-color);
}

.border-full, .input-span[data-variant=visible-tick] input[type=radio] + label,
.input-span[data-variant=visible-tick] input[type=checkbox] + label {
  border: 2px solid var(--border-color);
}

.square {
  width: 2rem;
  height: 2rem;
}

.square-medium {
  width: 4rem;
  height: 4rem;
}

.square-large {
  width: 6rem;
  height: 6rem;
}

.before-color-overlay:before {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background-color: var(--bg-color);
  mix-blend-mode: color;
  opacity: 20%;
  transition: opacity 100ms ease-in;
}

.before-hover-opacity:hover:before {
  opacity: 100%;
}

.rounded-outer-children:first-child button {
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
}
.rounded-outer-children:last-child button {
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
}

.horizontal-button-wrapper {
  display: flex;
  align-items: center;
  justify-content: space-evenly;
}

.button-list {
  display: flex;
}
.button-list li {
  list-style-type: none;
}

.sub-section {
  background-color: var(--bg-color);
  border-radius: 10px;
}

[data-title] {
  position: relative;
}
[data-title] .tooltip {
  font-size: var(--font-size-12);
  transition-delay: 0ms;
  transition: opacity 170ms ease-out;
  pointer-events: none;
  opacity: 0%;
  position: absolute;
  top: 100%;
  left: 0;
  min-width: calc(100% + 10ch);
  max-width: 210%;
}
[data-title] .tooltip.tooltip-right {
  left: unset;
  top: 100%;
  right: 100%;
}
[data-title] .tooltip.tooltip-wide {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  max-width: unset;
}
[data-title] .tooltip span {
  pointer-events: none;
  white-space: nowrap;
}
[data-title] .tooltip span:first-of-type {
  color: var(--accent-color-1);
}
[data-title] .tooltip span:last-of-type {
  color: var(--accent-color-2);
}
[data-title]:hover .tooltip {
  opacity: 100%;
  transition: opacity 320ms ease-out;
  transition-delay: 500ms;
}

.header {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
}

.config-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

.drawer-visible {
  right: unset;
  left: 0px;
}

.side-drawer {
  position: absolute;
  right: 100%;
  z-index: 200;
  width: 50%;
}
.side-drawer .tab {
  position: absolute;
  left: 100%;
  top: 50%;
  width: 3rem;
  height: 3rem;
  background-color: var(--color-secondary-base);
  color: white;
  z-index: 200;
}

.justify-self-right, .justify-self-center {
  margin-left: auto;
}

.justify-self-left, .justify-self-center {
  margin-right: auto;
}

.has-floating-label {
  box-sizing: border-box;
  position: relative;
  --form-field-height: fit-content;
}
.has-floating-label .floating-label {
  color: var(--foundry-dark-gray);
  position: absolute;
  top: 0.1em;
  left: 0.5em;
  background: inherit;
  font-size: smaller;
}
.has-floating-label input,
.has-floating-label select {
  padding-top: 1em;
  padding-bottom: 0.25em;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}
.flex-nowrap {
  flex-wrap: nowrap;
}

.flex-centered {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-justify-stretch {
  justify-content: stretch;
}
.flex-justify-space-between {
  justify-content: space-between;
}
.flex-justify-space-evenly {
  justify-content: space-evenly;
}
.flex-justify-start {
  justify-content: flex-start;
}
.flex-justify-end {
  justify-content: flex-end;
}

.flex-align-center {
  align-items: center;
}
.flex-align-start {
  align-items: flex-start;
}

.gap-small {
  gap: 0.25rem;
}

.gap-medium {
  gap: 0.5rem;
}

.gap-large {
  gap: 1rem;
}

.has-absolute-child {
  position: relative;
}
.has-absolute-child .absolute--child {
  position: absolute;
}

.focus-reveal > .focus-reveal--child {
  opacity: 0;
}
.focus-reveal > .focus-reveal--child[data-variant=scale] {
  transform: scale(0);
  transition: transform scale 150ms;
}
.focus-reveal:focus > .focus-reveal--child, .focus-reveal:focus-within > .focus-reveal--child {
  opacity: 100%;
}
.focus-reveal:focus > .focus-reveal--child[data-variant=scale], .focus-reveal:focus-within > .focus-reveal--child[data-variant=scale] {
  transform: scale(1);
}

.chip-span {
  display: inline-flex;
  justify-content: space-evenly;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  width: 100%;
  gap: 0.5rem;
  padding: 0.5rem;
}
.chip-span label {
  border-radius: 999px;
  min-width: 13ch;
}

.wrap {
  flex-wrap: wrap;
}

.text-centered {
  text-align: center;
}

.ghost {
  background-color: transparent;
  color: var(--color-primary-base);
  border: 1px solid white;
  border-color: var(--color-primary-base);
}
.ghost:hover {
  border-color: var(--color-secondary-base);
  color: var(--color-secondary-base);
}

.filled {
  background-color: var(--color-primary-base);
  border-color: var(--color-primary-base);
  color: white;
  transition: border-color 100ms ease-in, background-color 100ms ease-in;
}
.filled:hover {
  background-color: var(--color-secondary-base);
  border-color: var(--color-secondary-base);
}

.remove-on-click {
  position: relative;
}
.remove-on-click:before {
  position: absolute;
  pointer-events: none;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  background-color: rgb(255, 92, 63);
  content: "Remove?";
  opacity: 0;
  transition: opacity 100ms ease-in;
}
.remove-on-click:hover:before {
  opacity: 100%;
}

.bg-accent {
  background-color: var(--accent-color);
}

.sharp-corners {
  border-radius: 0px;
}

.rounded {
  border-radius: 8px;
}

.slight-rounded {
  border-radius: 5px;
}

.cap-rounded {
  border-radius: 999px;
}

.single-sharp-corner {
  border-top-left-radius: 0;
}

.text-white {
  color: white;
}

.text-warning {
  color: rgb(255, 92, 63);
}

.text-danger {
  color: rgb(255, 92, 63);
}

.text-primary {
  color: var(--color-primary-base);
}

.text-accent {
  color: var(--color-accent);
}

.text-heavy {
  font-weight: bold;
}

.border-styled {
  border: 2px solid var(--border-color);
}

.border-primary {
  border-color: var(--color-primary-base);
}

.border-accent {
  border-color: var(--color-accent);
}

.max-height-50 {
  max-height: 50%;
}

.hover-shadow:before {
  pointer-events: none;
  position: absolute;
  width: 100%;
  height: 100%;
  content: "";
  border-radius: inherit;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.25);
  opacity: 0%;
  transition: opacity 100ms ease-out;
}
.hover-shadow:hover:before {
  opacity: 100%;
}

.window-padding {
  padding: clamp(0.5rem, 0.5rem + 1vw, 1rem) clamp(0.5rem, 0.5rem + 1vh, 1rem);
}

.window-gap {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.input-and-label-wrapper {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.file-input-wrapper {
  display: flex;
  max-width: 100%;
}
.file-input-wrapper button {
  flex: 1 1 auto;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  height: 100%;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.file-input-wrapper input {
  flex: 1 0 auto;
  max-width: 60%;
  height: 100%;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.capitalize {
  text-transform: capitalize;
}

.item-menu {
  display: flex;
  justify-content: space-between;
}
.item-menu hr.list-divider {
  width: 100%;
  border-bottom: unset;
  border-top: unset;
  border: 1px solid hsl(0deg, 0%, 50%);
  margin-top: unset;
  margin-bottom: unset;
}
.item-menu li {
  background-color: var(--foundry-dark-gray);
  width: 100%;
  --bg-color: var(--JTCS-accent-color);
  --text-color: var(--JTCS-text-color);
}
.item-menu li:first-child {
  margin-top: 1em;
}
.item-menu li:last-child {
  padding-top: 1em;
  padding-bottom: 1em;
}
.item-menu li i {
  display: grid;
  place-content: center;
  margin-right: 1.5rem;
}

#JTCS-custom-dialog {
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
}
#JTCS-custom-dialog .window-content h1 {
  font-size: 1.5rem;
  border-bottom: unset;
}
#JTCS-custom-dialog .window-content input {
  width: 100%;
}
#JTCS-custom-dialog .dialog-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}
#JTCS-custom-dialog .dialog-buttons {
  flex: 0;
}
#JTCS-custom-dialog .dialog-buttons .dialog-button[data-button=delete] {
  background: var(--color-danger-base);
  color: white;
  font-weight: bold;
}
#JTCS-custom-dialog .dialog-buttons .dialog-button[data-button=list] {
  background: !important;
}
#JTCS-custom-dialog .destructive-action-prompt {
  flex: 1 0 0;
}
#JTCS-custom-dialog .destructive-action-prompt h1 {
  display: inline-flex;
  gap: 1rem;
}
#JTCS-custom-dialog .destructive-action-prompt h1 {
  font-size: 2rem;
}
#JTCS-custom-dialog .destructive-action-prompt h1,
#JTCS-custom-dialog .destructive-action-prompt .destructive-action-text {
  color: var(--color-danger-base);
  font-weight: 700;
}

:root {
  --foundry-dark-gray: rgba(52, 52, 52, 0.85);
  --foundry-purple-background-hover: rgba(60, 0, 120, 0.5);
  --foundry-purple-shadow-hover: #9b8dff;
  --foundry-purple-border: #3b1893;
  --foundry-purple-background: rgba(30, 0, 60, 0.5);
  --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36) inset;
  --color-secondary-darkest: hsl(221deg, 98%, 20%);
  --color-secondary-800: hsl(215deg, 98%, 30%);
  --color-secondary-700: hsl(210deg, 98%, 40%);
  --color-secondary-600: hsl(205deg, 98%, 52%);
  --color-secondary-base: hsl(199deg, 98%, 63%);
  --color-secondary-400: hsl(190deg, 99%, 70%);
  --color-secondary-300: hsl(185deg, 100%, 80%);
  --color-secondary-lightest: hsl(175deg, 100%, 90%);
  --color-primary-darkest: hsl(240deg, 58%, 28%);
  --color-primary-800: hsl(240deg, 58%, 30%);
  --color-primary-700: hsl(240deg, 58%, 40%);
  --color-primary-600: hsl(240deg, 60%, 50%);
  --color-primary-base: hsl(240deg, 60%, 60%);
  --color-primary-400: hsl(240deg, 60%, 68%);
  --color-primary-300: hsl(240deg, 65%, 75%);
  --color-primary-200: hsl(240deg, 75%, 85%);
  --color-primary-lightest: hsl(240deg, 86%, 92%);
  --color-deep-purple-darkest: hsl(269deg, 100%, 8%);
  --color-deep-purple-700: hsl(269deg, 100%, 18%);
  --color-deep-purple-600: hsl(269deg, 100%, 28%);
  --color-deep-purple-base: hsl(269deg, 100%, 38%);
  --color-neutral-darkest: hsl(240deg, 17%, 20%);
  --color-neutral-700: hsl(240deg, 17%, 30%);
  --color-neutral-base: hsl(240deg, 12%, 50%);
  --color-neutral-300: hsl(240deg, 17%, 70%);
  --color-neutral-lightest: hsl(240deg, 17%, 90%);
  --color-glass-no-blur: hsla(0deg, 0%, 44%, 0.478);
  --color-glass-blur: hsla(0deg, 0%, 44%, 0.267);
  --color-glass-border: hsla(0deg, 0%, 100%, 0.198);
  --color-glass-no-blur-dark: hsla(240deg, 11%, 14%, 0.769);
  --color-glass-blur-dark: hsla(240deg, 11%, 14%, 0.161);
  --color-glass-border-dark: hsla(240deg, 10%, 40%, 0.568);
  --color-danger-dark: hsl(0deg, 89%, 20%);
  --color-danger-base: hsl(0deg, 59%, 50%);
  --color-danger-light: hsl(0deg, 99%, 70%);
  --color-warning-dark: hsl(35deg, 100%, 30%);
  --color-warning-base: hsl(35deg, 80%, 50%);
  --color-warning-light: hsl(35deg, 100%, 65%);
  --color-success-dark: hsl(100deg, 100%, 30%);
  --color-success-base: hsl(100deg, 100%, 50%);
  --color-success-light: hsl(100deg, 100%, 70%);
  --color-info-dark: hsl(200deg, 100%, 25%);
  --color-info-base: hsl(200deg, 60%, 40%);
  --color-info-light: hsl(200deg, 80%, 60%);
  --space-small: 1rem;
  --space-medium: 2rem;
  --space-large: 3rem;
}
:root body.pink {
  background-color: #dc51ac;
}
:root body.red {
  background-color: #d64651;
}
:root body.orange {
  background-color: #e55937;
}

:root {
  --box-shadow-inset: 1px 1px 3px 1px rgba(0, 0, 0, 0.36) inset;
  --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36);
}

#JTCSSettingsApplication {
  min-height: 50vh;
  max-width: 50vw;
}
#JTCSSettingsApplication .color-picker-group {
  position: relative;
}
#JTCSSettingsApplication .color-picker-group .picker_wrapper {
  position: absolute;
  top: 100%;
  z-index: 800;
}
#JTCSSettingsApplication .window-content form {
  display: flex;
  flex-direction: column;
}
#JTCSSettingsApplication .window-content form .form-content {
  flex: 1 1 0;
}
#JTCSSettingsApplication .window-content form .sheet-footer {
  flex: 0;
}

#slideshow-config {
  --flow-space: 1.25rem;
  width: min(600px, 45vw);
  max-width: min(600px, 55vw);
}
#slideshow-config .window-content {
  color: var(--color-text-primary);
}
#slideshow-config .window-content header .wrapper {
  flex-wrap: wrap;
}
#slideshow-config .window-content header .wrapper .form-group {
  flex: 2;
}
#slideshow-config .window-content header .wrapper .actions {
  flex: 1;
}
#slideshow-config .window-content form {
  height: 100%;
}
#slideshow-config .window-content .tilesInScene {
  height: 95%;
  position: relative;
}
#slideshow-config .window-content .tilesInScene .wrapper.art-tiles h3 {
  color: var(--data-art-color);
  text-shadow: -1px 1px 2px black, 1px 1px 2px black, 1px -1px 0 black, -1px -1px 0 black;
}
#slideshow-config .window-content .tilesInScene .wrapper.art-tiles .item-wrapper {
  border-color: var(--data-art-color);
}
#slideshow-config .window-content .tilesInScene .wrapper.art-tiles .new-tile-list-item button {
  border-radius: unset;
  background-color: transparent;
  color: var(--data-art-color);
  border-top: 2px solid var(--data-art-color);
  transition: background-color 120ms ease-in, color 120ms ease-in;
}
#slideshow-config .window-content .tilesInScene .wrapper.art-tiles .new-tile-list-item button:hover, #slideshow-config .window-content .tilesInScene .wrapper.art-tiles .new-tile-list-item button:focus {
  transition: background-color 120ms ease-out, color 120ms ease-out;
  background-color: var(--data-art-color);
  color: var(--JTCS-text-color-alt);
}
#slideshow-config .window-content .tilesInScene .wrapper.art-tiles .new-tile-list-item button:hover, #slideshow-config .window-content .tilesInScene .wrapper.art-tiles .new-tile-list-item button:focus {
  box-shadow: unset;
}
#slideshow-config .window-content .tilesInScene .wrapper.frame-tiles h3 {
  color: var(--data-frame-color);
  text-shadow: -1px 1px 2px black, 1px 1px 2px black, 1px -1px 0 black, -1px -1px 0 black;
}
#slideshow-config .window-content .tilesInScene .wrapper.frame-tiles .item-wrapper {
  border-color: var(--data-frame-color);
}
#slideshow-config .window-content .tilesInScene .wrapper.frame-tiles .new-tile-list-item button {
  border-radius: unset;
  background-color: transparent;
  color: var(--data-frame-color);
  border-top: 2px solid var(--data-frame-color);
  transition: background-color 120ms ease-in, color 120ms ease-in;
}
#slideshow-config .window-content .tilesInScene .wrapper.frame-tiles .new-tile-list-item button:hover, #slideshow-config .window-content .tilesInScene .wrapper.frame-tiles .new-tile-list-item button:focus {
  transition: background-color 120ms ease-out, color 120ms ease-out;
  background-color: var(--data-frame-color);
  color: var(--JTCS-text-color-alt);
}
#slideshow-config .window-content .tilesInScene .wrapper.frame-tiles .new-tile-list-item button:hover, #slideshow-config .window-content .tilesInScene .wrapper.frame-tiles .new-tile-list-item button:focus {
  box-shadow: unset;
}
#slideshow-config .window-content .tilesInScene .wrapper h3 {
  font-size: 1.25em;
}
#slideshow-config .window-content .tilesInScene .item-wrapper {
  display: flex;
  flex-direction: column;
}
#slideshow-config .window-content .tilesInScene .item-wrapper ul {
  flex: 1 0 0;
}
#slideshow-config .window-content .tilesInScene .item-wrapper .new-tile-list-item {
  flex: 0;
  height: 100%;
}
#slideshow-config .window-content .tilesInScene .item-wrapper .new-tile-list-item button {
  height: 100%;
}
#slideshow-config .window-content .tile-list-item select {
  height: var(--form-field-height);
}
#slideshow-config .window-content li {
  background: hsla(0deg, 0%, 100%, 0.3);
  --flow-space: 0.25em;
}
#slideshow-config .window-content li .actions {
  display: flex;
  align-items: center;
  flex: 0 0 50px;
  justify-content: center;
}
#slideshow-config .window-content h1,
#slideshow-config .window-content h2,
#slideshow-config .window-content h3 {
  font-weight: bold;
}

.clickableImageContainer {
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  position: relative;
}
.clickableImageContainer.JTCS label {
  border: 2px solid var(--color-deep-purple-darkest);
  background-color: 2px solid var(--color-deep-purple-base);
  box-shadow: none;
}
.clickableImageContainer.JTCS label:not(:first-of-type, :last-of-type) {
  border-left: none;
  border-right: none;
}
.clickableImageContainer .clickableImageControls {
  opacity: 0%;
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  align-items: flex-end;
  width: 100%;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  transition: opacity 100ms ease-in;
  pointer-events: none;
}
.clickableImageContainer .clickableImageControls:hover {
  opacity: 100%;
}
.clickableImageContainer .displayLocations {
  gap: 0.5rem;
}
.clickableImageContainer .displayLocations * {
  pointer-events: auto;
}
.clickableImageContainer .displayTiles {
  pointer-events: auto;
  grid-row: 1/2;
  grid-column: 2/4;
  display: flex;
  flex-direction: row;
  border: none;
  color: white;
  padding: 0rem 0rem;
  min-width: 50%;
}
.clickableImageContainer .displayTiles button {
  max-width: -webkit-fit-content;
  max-width: -moz-fit-content;
  max-width: fit-content;
  border: unset;
  box-shadow: var(--box-shadow);
  background-color: var(--data-art-color);
  border: 1px solid rgba(255, 255, 255, 0.568627451);
  outline: 0px solid white;
  outline-offset: 2px;
  transition: outline 120ms ease-in, outline-offset 150ms ease-in;
}
.clickableImageContainer .displayTiles button:hover, .clickableImageContainer .displayTiles button:focus {
  outline: 1px solid white;
  outline-offset: 0px;
  transition: outline 120ms ease-out, outline-offset 120ms ease-out;
}
.clickableImageContainer .displayTiles button[data-is-default] {
  background-color: var(--data-default-color);
  border: 1px solid rgba(255, 255, 255, 0.568627451);
  outline: 0px solid white;
  outline-offset: 2px;
  transition: outline 120ms ease-in, outline-offset 150ms ease-in;
}
.clickableImageContainer .displayTiles button[data-is-default]:hover, .clickableImageContainer .displayTiles button[data-is-default]:focus {
  outline: 1px solid white;
  outline-offset: 0px;
  transition: outline 120ms ease-out, outline-offset 120ms ease-out;
}
.clickableImageContainer .displayTiles * {
  pointer-events: auto;
}
.clickableImageContainer .displayTiles legend {
  background-color: inherit;
  padding: 0.5rem;
}
.clickableImageContainer .displayTiles label:first-of-type {
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
}
.clickableImageContainer .displayTiles label:last-of-type {
  border-top-right-radius: 8px;
  border-bottom-right-radius: 8px;
}

.clickableImage,
.rightClickableImage {
  border: 0px solid transparent;
  box-shadow: inset 0px 0px 2px transparent;
  transition: all 100ms ease-out;
}
.clickableImage:hover,
.rightClickableImage:hover {
  border: 2px solid white;
  box-shadow: inset 2px 2px 8px rgba(50, 51, 59, 0.5);
  cursor: pointer;
  transition: all 100ms ease-out;
}
.clickableImage:hover ~ .clickableImageControls,
.rightClickableImage:hover ~ .clickableImageControls {
  opacity: 100%;
}
.clickableImage:active,
.rightClickableImage:active {
  box-shadow: inset 4px 4px 16px rgba(50, 51, 59, 0.5);
}

[data-type=art] {
  --accent-color: var(--data-art-color);
}

[data-type=frame] {
  --accent-color: var(--data-frame-color);
}

[data-type=unlinked] {
  --accent-color: var(--data-unlinked-color);
}

[data-is-default] {
  --accent-color: var(--data-default-color);
  border-color: var(--accent-color);
}
[data-is-default] .badge {
  background-color: var(--accent-color);
}

[data-type].accent {
  color: var(--accent-color);
}
[data-type].accent input,
[data-type].accent select {
  border-color: var(--accent-color);
}
[data-type].accent input ::-moz-placeholder, [data-type].accent select ::-moz-placeholder {
  color: var(--accent-color);
}
[data-type].accent input :-ms-input-placeholder, [data-type].accent select :-ms-input-placeholder {
  color: var(--accent-color);
}
[data-type].accent input ::placeholder,
[data-type].accent select ::placeholder {
  color: var(--accent-color);
}
[data-type].accent .badge {
  color: var(--color-text-dark-primary);
}
[data-type].accent label {
  color: var(--accent-color);
}
[data-type].accent.border-accent {
  border-color: var(--accent-color);
}
[data-type].accent [data-type=unlinked] {
  --accent-color: var(--data-unlinked-color);
}
[data-type].accent [data-type=unlinked] + label {
  --accent-color: var(--data-unlinked-color);
}

.error::before {
  content: "⚠";
  color: var(--color-danger-base);
}

[data-missing=true] {
  color: var(--color-danger-base);
}
[data-missing=true]:hover {
  color: var(--color-warning-base);
}
[data-missing=true] button:disabled {
  opacity: 50%;
}
[data-missing=true] button:disabled:hover {
  cursor: not-allowed;
}

.unlinked-tiles-list {
  padding-block: 2em;
}
.unlinked-tiles-list ul {
  background-color: var(--foundry-dark-gray);
}
.unlinked-tiles-list li {
  list-style-type: none;
  --bg-color: var(--data-unlinked-color);
}
.unlinked-tiles-list li .input-span {
  width: 100%;
}
.unlinked-tiles-list li .input-span input {
  margin-right: 0.5rem;
}/*# sourceMappingURL=styles.css.map */