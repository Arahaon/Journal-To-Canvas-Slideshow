@use "colors" as *;
@use "utility" as *;
@use "mixins" as *;
@import "_variables";
:root {
    --box-shadow-inset: 1px 1px 3px 1px rgba(0, 0, 0, 0.36) inset;
    --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36);
}
#JTCSSettingsApplication,
#slideshow-config,
#JTCS-custom-dialog {
    .window-content {
        --color-shadow-primary: var(--JTCS-accent-color);

        .container {
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
            border: 1px solid var(--JTCS-background-color-30);
        }

        --flow-space: 2em;
        .flow {
            @extend .flow;
        }
        background: var(--JTCS-background-color-10);
        .elevation-1 {
            background: var(--JTCS-background-color);
        }
        .form-group,
        .form-group-stacked {
            button.danger {
                width: 100%;
                max-width: 300px;
            }
            &.has-floating-label {
                input {
                    width: 100%;
                    max-width: 300px;
                }
            }
            .file-picker-group {
                align-items: stretch;
                input {
                    flex: 1;
                    width: 100%;
                    max-width: 450px;
                    border: 1px solid var(--JTCS-accent-color-20);
                }
                button {
                    flex: 0;
                }
            }
            &.color-picker-container {
                input {
                    width: 100%;
                    max-width: 300px;
                }
                align-items: stretch;
                .color-picker-group {
                    flex: 0;
                    min-width: fit-content;
                }
                .color-actions {
                    flex: 0;
                }
            }
        }

        .form-group-stacked {
            --flow-space: 1em;
            p.notes {
                color: var(--JTCS-text-color-on-bg);
            }
        }
        select,
        input,
        label,
        button {
            cursor: pointer;
        }

        $selectors: (
            "p",
            ".file-picker-group > label",
            ".color-picker-group > label",
            "span:not(.input-span) label",
            "li:not(.accent) label",
            ".icon-button:not(.danger):not(.danger-text)"
        );
        $selectors: join($selectors, returnAllHeadings());
        // $headers: returnAllHeadings();
        $properties: (
            color: var(--JTCS-text-color-on-bg),
        );
        @include printSelectors($selectorList: $selectors, $propertyMap: $properties);

        // remove all border-bottoms on headings

        @include printSelectors(
            $selectorList: returnAllHeadings(),
            $propertyMap: (
                border-bottom: unset,
                color: var(--JTCS-accent-color),
            )
        );

        // have labels highlight with accent color
        .form-group,
        .color-picker-group,
        .file-picker-group {
            &.has-floating-label {
                input {
                    height: 100%;
                }
                label {
                    white-space: nowrap;
                }
                &:hover {
                    --accent-color: var(--JTCS-accent-color);
                    label {
                        white-space: nowrap;
                        color: var(--accent-color);
                    }
                }
                &:focus {
                    outline: 1px solid var(--JTCS-accent-color);
                }
            }
        }
        // remove borders from spans and list items
        span:not(.input-span):not(.tick-box):not(.tick-circle) {
            border-color: transparent;
        }

        li.tile-list-item:not(.new-tile-list-item) {
            box-shadow: var(--JTCS-background-color-50) 0px 1px 3px;
            .actions .icon-button {
                box-shadow: unset;
                outline: unset;
                background-color: unset;
                color: var(--JTCS-text-color-on-bg);
                transition: color 150ms ease-in-out;
                &:hover,
                &:focus {
                    box-shadow: unset;
                    outline: unset;
                    background-color: unset;
                    color: var(--JTCS-accent-color);
                }
                &.active {
                    color: var(--JTCS-accent-color);
                    transform: scale(1);
                    transition: transform 150ms ease-in-out;
                    &:hover {
                        transform: scale(1.12);
                    }
                }
            }
            // box-shadow: var(--JTCS-background-color-40) 0px 0px 0px 2px,
            // var(--JTCS-background-color-60) 0px 4px 6px -1px, var(--JTCS-background-color-10) 0px 1px 0px inset;
        }

        input[type="text"],
        select {
            font-family: Arial, Helvetica, sans-serif;
            border-color: var(--JTCS-background-color-70);
            background-color: var(--JTCS-background-color);
            // background-color: var(--JTCS-background-color-20);
            &:hover {
                border-color: var(--JTCS-accent-color);
            }
        }
        .color-picker-group {
            label {
                background-color: var(--JTCS-background-color);
                padding-inline: 0.15rem;
                border-radius: 3px;
            }
        }
        input[data-responsive-color]#backgroundColor {
            border: 1px solid var(--JTCS-accent-color-20);
        }

        //for neutral text
        input[type="radio"],
        input[type="text"],
        select {
            color: var(--JTCS-text-color-on-bg);
        }
        // for the list items in the slideshow config
        [data-type="art"] {
            --accent-color: var(--data-art-color);
            // border-color: var(--accent-color);
            transition: border-color 150ms ease-in;
        }

        [data-type="frame"] {
            --accent-color: var(--data-frame-color);
            // border-color: var(--accent-color);
            transition: border-color 150ms ease-in;
        }
        [data-type="unlinked"] {
            --accent-color: var(--data-unlinked-color);
            // border-color: var(--accent-color);
            transition: border-color 150ms ease-in;
        }
        [data-is-default] {
            --accent-color: var(--data-default-color);
            border-color: var(--accent-color);
            border: 2px solid var(--accent-color);
            transition: border-color 150ms ease-in, border-style 150ms ease-in;
            &:not(.accent) {
                // outline: 1px solid var(--accent-color);
                border: 2px solid var(--accent-color);
                transition: border-color 150ms ease-out, border-style 150ms ease-in;
            }
            .badge {
                background-color: var(--accent-color);
            }
            &:span {
                color: var(--accent-color);
            }
        }

        //for all things with a "data-type" (referring to tile), and an accent class on them
        [data-type].accent {
            color: var(--accent-color);
            transition: color 150ms ease-in, border-color 150 ease-in;

            .badge {
                color: var(--color-text-dark-primary);
            }
            .form-group.has-floating-label {
                > label.floating-label {
                    transition: color 150ms ease-in;
                    color: var(--accent-color);
                }
                > input,
                > select {
                    // border: unset;
                    // border-bottom: 2px solid;

                    font-family: Arial, Helvetica, sans-serif;
                    border-color: var(--accent-color);
                    transition: border-color 150ms ease-out;
                    ::placeholder {
                        color: var(--accent-color);
                    }
                }
            }
            &.border-accent {
                border-color: var(--accent-color);
                transition: border-color 150ms ease-out;
            }
            [data-type="unlinked"] {
                --accent-color: var(--data-unlinked-color);
                + label {
                    --accent-color: var(--data-unlinked-color);
                }
            }
        }
    }
    .primary {
        @include JTCS-accent-fill();
    }
    button {
        &.file-picker,
        &[type="button"]:not(.danger):not([data-action="scrollTo"]) {
            @include JTCS-accent-fill();
        }
    }
    .secondary {
        @include JTCS-accent-ghost();
    }
}

#JTCSSettingsApplication {
    // min-height: 50vh;
    height: clamp(50vh, 530px, 80vh);
    max-width: 60vw;
    header,
    footer {
        position: relative;
        &:after {
            position: absolute;
            pointer-events: none;
            content: "";
            z-index: 1;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            box-shadow: 0px 2px 8px var(--JTCS-box-shadow-color);
        }
    }
    footer {
        &:after {
            box-shadow: 0px -2px 8px var(--JTCS-box-shadow-color);
        }
    }
    .color-picker-group {
        position: relative;
        .picker_wrapper {
            position: absolute;
            /* top: -50%; */
            z-index: 800;
            transform: translateY(-50%);
            left: 100%;
        }
    }
    .window-content {
        padding: unset;
        // overflow: hidden;
        form {
            display: flex;
            flex-direction: column;
            .form-content {
                flex: 1 1 0;
                > .form-group,
                > .form-group-stacked {
                    fieldset {
                        border: unset;
                    }
                    border-radius: 8px;
                    background-color: var(--JTCS-background-color-10);
                    // box-shadow: var(--JTCS-background-color-40) 0px 0px 0px 2px,
                    //     var(--JTCS-background-color-60) 0px 4px 6px -1px,
                    //     var(--JTCS-background-color-10) 0px 1px 0px inset;
                    box-shadow: 1px 0px 8px 2px var(--JTCS-box-shadow-color);
                    padding: 1rem;
                }
            }
            input[type="range"]::-webkit-slider-thumb {
                background-color: var(--JTCS-accent-color);
            }
            .range-value {
                color: var(--JTCS-accent-color);
                font-weight: bold;
            }
            p.notes {
                font-weight: 500;
                margin-bottom: unset;
                span.accent {
                    --accent-color: var(--JTCS-accent-color);
                    color: var(--JTCS-accent-color);
                }
            }
            .sheet-footer {
                flex: 0;
            }
        }
    }
}

#sheet-controls {
    z-index: 100;
    position: absolute;
    &[data-position="bottom-right"] {
        bottom: 5px;
        right: 5px;
        flex-direction: row-reverse;
    }
    &[data-position="top-left"] {
        top: 5px;
        left: 5px;
    }
    &[data-position="bottom-left"] {
        bottom: 5px;
        left: 5px;
    }
    &[data-position="top-right"] {
        bottom: 5px;
        left: 5px;
    }

    // transform: translateX(-50%);
    min-width: 65px;
    button {
        width: 36px;
        height: 36px;
        --color-shadow-primary: var(--JTCS-accent-color);
        @include JTCS-accent-fill($include-shadow: false, $is-icon-button: true);
        background-color: var(--JTCS-accent-color-60);
        &.active {
            @include JTCS-accent-fill($include-shadow: true, $is-icon-button: true);
        }
    }
}

#slideshow-config {
    width: min(600px, 45vw);
    max-width: min(600px, 55vw);

    .window-content {
        --flow-space: 0.5rem;
        color: var(--color-text-primary);
        scrollbar-color: var(--JTCS-accent-color) var(--JTCS-accent-color-70);
        &::-webkit-scrollbar-track {
            background-color: var(--JTCS-accent-color-70);
        }
        &::-webkit-scrollbar-thumb {
            background-color: var(--JTCS-accent-color);
            border-color: var(--JTCS-accent-color-50);
        }

        // max-height: calc(100vh - 200px);
        // width: min(600px, 45vw);
        // max-width: min(600px, 45vw);
        header .wrapper {
            flex-wrap: wrap;

            .form-group {
                flex: 2;
            }
            .actions {
                flex: 1;
                min-width: 66px;
                max-width: 108px;
            }
        }
        #JTCS-config-instructions {
            position: relative;
            margin-top: unset;

            min-width: 200px;
            max-width: 250px;
            font-size: var(--font-size-12);
            // width: clamp(200px, 40ch, 250px);

            background-color: transparent;
            flex-shrink: 0;
            position: absolute;
            top: 20%;
            left: calc(100%);

            .instructions__content {
                border-radius: 5px;
                border-top-left-radius: 0px;
                border-top-right-radius: 0px;
                background-color: transparent;
                width: 100%;
                $list: ("art", "frame", "unlinked", "default");
                @each $var in $list {
                    .#{$var}-color {
                        color: var(--data-#{$var}-color);
                        font-weight: bold;
                    }
                }

                &:before {
                    content: "";
                    position: absolute;
                    top: 0;
                    left: 0;
                    width: 100%;
                    height: 100%;
                    pointer-events: none;
                    z-index: -1;
                    border-top: 2px solid var(--JTCS-box-shadow-color);
                    background-color: var(--JTCS-background-color-10);
                    opacity: 95%;
                    backdrop-filter: blur(12px);
                    border-radius: 5px;
                    border-top-left-radius: 0px;
                    border-left: 0.25rem solid var(--JTCS-accent-color);
                    border-bottom-left-radius: 0px;
                    // filter: blur(3px);
                }
                &:not(.hidden) {
                    padding: 1rem;
                    min-height: 10em;
                    // max-height
                }
                //     opacity: 0%;
            }
            button {
                background-color: var(--JTCS-background-color-10);
                border: 2px solid var(--JTCS-accent-color);
                color: var(--JTCS-accent-color);
                &.active {
                    @include JTCS-accent-fill($include-shadow: true, $is-icon-button: true);
                }

                // @include JTCS-accent-fill($include-shadow: true);
                position: absolute;
                // top: 0;
                bottom: 100%;
                left: 0;
                // right: 100%;
                max-width: 2rem;
                max-height: 2rem;
            }
        }
        form {
            height: 100%;
            // max-height: 80vh;
        }
        .tilesInScene {
            .wrapper {
                $tile-types: (
                    art: "art-tiles",
                    frame: "frame-tiles",
                );
                $tile-type-colors: ();
                @each $type, $selector in $tile-types {
                    &.#{$selector} {
                        h3 {
                            background-color: var(--data-#{$type}-color);
                            width: 100%;
                            color: var(--JTCS-text-color-on-fill);
                            border-top-left-radius: 8px;
                            border-top-right-radius: 8px;
                            white-space: nowrap;
                            text-align: center;
                            margin-bottom: unset;
                        }
                        .item-wrapper {
                            border-color: var(--data-#{$type}-color);
                            ul {
                                scrollbar-color: var(--data-#{$type}-color) var(--data-#{$type}-color);
                                &::-webkit-scrollbar-track {
                                    background-color: var(--JTCS-background-color-30);
                                }
                                &::-webkit-scrollbar-thumb {
                                    background-color: var(--data-#{$type}-color);
                                    border-color: var(--data-#{$type}-color);
                                    box-shadow: 0px 0px 4px var(--data-#{$type}-color);
                                }
                            }
                        }
                        .new-tile-list-item {
                            button {
                                border-radius: unset;
                                @include JTCS-accent-ghost(
                                    $primary-color: var(--data-#{$type}-color),
                                    $border-side: "-top"
                                );
                                border-width: 1px;
                                &:hover,
                                &:focus {
                                    box-shadow: unset;
                                }
                            }
                        }
                    }
                }
                h3 {
                    font-size: min(1.25em, 100%);
                }
            }

            height: 95%;
            position: relative;
            .wrapper {
                overflow: hidden;
                .item-wrapper {
                    overflow: hidden;
                }
            }

            .item-wrapper {
                display: flex;
                flex-direction: column;
                // background-color: var(--JTCS-background-color-10);
                // box-shadow: 1px 0px 8px 2px var(--JTCS-box-shadow-color);
                // max-height: 90%;
                ul {
                    flex: 1 0 0;
                    // max-height: 90%;
                }
                .new-tile-list-item {
                    flex: 0;
                    height: 100%;
                    button {
                        height: 100%;
                    }
                }
            }
        }

        .tile-list-item {
            select {
                height: var(--form-field-height);
            }
            // &[data-is-default] {
            //     border-width: 5px;
            //     border-color: hotpink !important;
            // }
        }
        li {
            --flow-space: 0.25em;
        }
        li .actions {
            display: flex;
            align-items: center;
            flex: 0 0 50px;
            justify-content: center;
        }
        h1,
        h2,
        h3 {
            font-weight: bold;
        }
    }
    // --color-text-primary: ;
}

.clickableImageContainer {
    width: fit-content;
    &.JTCS {
        label {
            border: 2px solid var(--color-deep-purple-darkest);
            background-color: 2px solid var(--color-deep-purple-base);
            box-shadow: none;
        }
        label:not(:first-of-type, :last-of-type) {
            border-left: none;
            border-right: none;
        }
    }
    position: relative;
    .clickableImageControls {
        opacity: 0%;
        position: absolute;
        top: 20%;
        // transform: translateY(-50%);
        left: 0;
        display: flex;
        align-items: flex-end;
        width: 100%;
        height: fit-content;

        transition: opacity 100ms ease-in;
        pointer-events: none;

        &:hover {
            opacity: 100%;
        }
    }

    .displayLocations {
        gap: 0.5rem;
        * {
            pointer-events: auto;
        }
    }

    .displayTiles {
        pointer-events: auto;
        display: flex;
        flex-wrap: wrap;
        button {
            width: fit-content;
            white-space: nowrap;
            border: unset;
            box-shadow: var(--box-shadow);
            @include JTCS-accent-fill($primary-color: var(--data-art-color));
            &[data-is-default] {
                @include JTCS-accent-fill($primary-color: var(--data-default-color));
            }
        }
        * {
            pointer-events: auto;
        }
        legend {
            background-color: inherit;
            padding: 0.5rem;
        }
        display: flex;
        flex-direction: row;
        border: none;
        color: white;
        padding: 0rem 0rem;
        min-width: 50%;
        label:first-of-type {
            border-top-left-radius: 8px;
            border-bottom-left-radius: 8px;
        }
        label:last-of-type {
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
        }
    }
}

.clickableImage,
.rightClickableImage {
    border: 0px solid transparent;
    box-shadow: inset 0px 0px 2px transparent;
    transition: all 100ms ease-out;
    &:hover {
        border: 2px solid white;
        box-shadow: inset 2px 2px 8px rgba(50, 51, 59, 0.5);
        cursor: pointer;
        transition: all 100ms ease-out;
        & ~ .clickableImageControls {
            opacity: 100%;
            // pointer-events: auto;
        }
    }
    &:active {
        box-shadow: inset 4px 4px 16px rgba(50, 51, 59, 0.5);
    }
}

.error {
    &::before {
        content: "⚠";
        color: var(--color-danger-base);
    }
}

[data-missing="true"] {
    &:hover {
        color: var(--color-warning-base);
    }
    color: var(--color-danger-base);

    button:disabled {
        opacity: 50%;
        &:hover {
            cursor: not-allowed;
        }
    }
}
.unlinked-tiles-list {
    padding-block: 2em;
    ul {
        background-color: var(--foundry-dark-gray);
    }
    li {
        list-style-type: none;
        .input-span {
            width: 100%;
            input {
                margin-right: 0.5rem;
            }
        }
        --bg-color: var(--data-unlinked-color);
        @extend .hover-bg-dynamic;
    }
}
