@use "colors" as *;
@import "_utility";
@import "_variables";
:root {
    --box-shadow-inset: 1px 1px 3px 1px rgba(0, 0, 0, 0.36) inset;
    --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36);
}
#JTCSSettingsApplication {
    min-height: 50vh;
    max-width: 50vw;
    .color-picker-group {
        position: relative;
        .picker_wrapper {
            position: absolute;
            z-index: 800;
        }
    }
    .window-content {
        // overflow: hidden;
        form {
            display: flex;
            flex-direction: column;
            .form-content {
                flex: 1 1 0;
            }
            .sheet-footer {
                flex: 0;
            }
        }
    }
}
#slideshow-config {
    --flow-space: 1.25rem;
    width: min(600px, 45vw);
    max-width: min(600px, 55vw);

    .window-content {
        color: var(--color-text-primary);
        // max-height: calc(100vh - 200px);
        // width: min(600px, 45vw);
        // max-width: min(600px, 45vw);
        header .wrapper {
            flex-wrap: wrap;

            .form-group {
                flex: 2;
            }
            .actions {
                flex: 1;
            }
        }
        form {
            height: 100%;
            // max-height: 80vh;
        }
        .tilesInScene {
            // min-height: 50vh;
            // max-height: 80%;
            // height: 80%;
            height: 95%;
            position: relative;

            .item-wrapper {
                display: flex;
                flex-direction: column;
                // max-height: 90%;
                ul {
                    flex: 1 0 0;
                    // max-height: 90%;
                }
                .new-tile-list-item {
                    flex: 0;
                    height: 100%;
                    button {
                        height: 100%;
                    }
                }
            }
        }

        .tile-list-item {
            select {
                height: var(--form-field-height);
            }
            // &[data-is-default] {
            //     border-width: 5px;
            //     border-color: hotpink !important;
            // }
        }
        li {
            background: hsla(0, 0%, 100%, 0.3);
            --flow-space: 0.25em;
        }
        li .actions {
            display: flex;
            align-items: center;
            flex: 0 0 50px;
            justify-content: center;
        }
        h1,
        h2,
        h3 {
            font-weight: bold;
        }
    }
    // --color-text-primary: ;
}

.clickableImageContainer {
    &.JTCS {
        label {
            border: 2px solid var(--color-deep-purple-darkest);
            background-color: 2px solid var(--color-deep-purple-base);
            box-shadow: none;
        }
        label:not(:first-of-type, :last-of-type) {
            border-left: none;
            border-right: none;
        }
    }
    position: relative;
    .clickableImageControls {
        opacity: 0%;
        position: absolute;
        top: 0;
        left: 0;
        display: grid;
        width: fit-content;
        height: fit-content;
        grid-template-columns: minmax(20px, auto) minmax(0, 1fr);
        grid-template-rows: minmax(20px, auto) minmax(0, 1fr) minmax(0, 1fr);

        transition: opacity 100ms ease-in;
        pointer-events: none;

        &:hover {
            opacity: 100%;
        }
    }

    .displayLocations {
        gap: 0.5rem;
        * {
            pointer-events: auto;
        }
    }

    .displayTiles {
        box-shadow: var(--box-shadow);
        pointer-events: auto;
        * {
            pointer-events: auto;
        }
        legend {
            background-color: inherit;
            padding: 0.5rem;
        }

        grid-row: 1/2;
        grid-column: 2/4;
        display: flex;
        flex-direction: row;
        border: none;
        color: white;
        padding: 0rem 0rem;
        min-width: 50%;
        label:first-of-type {
            border-top-left-radius: 8px;
            border-bottom-left-radius: 8px;
        }
        label:last-of-type {
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
        }
    }
}

.clickableImage,
.rightClickableImage {
    border: 0px solid transparent;
    box-shadow: inset 0px 0px 2px transparent;
    transition: all 100ms ease-out;
    &:hover {
        border: 2px solid white;
        box-shadow: inset 2px 2px 8px rgba(50, 51, 59, 0.5);
        cursor: pointer;
        transition: all 100ms ease-out;
        & ~ .clickableImageControls {
            opacity: 100%;
            // pointer-events: auto;
        }
    }
    &:active {
        box-shadow: inset 4px 4px 16px rgba(50, 51, 59, 0.5);
    }
}

[data-type="art"] {
    --accent-color: var(--data-art-color);
}

[data-type="frame"] {
    --accent-color: var(--data-frame-color);
}
[data-type="unlinked"] {
    --accent-color: var(--data-unlinked-color);
}
[data-is-default] {
    --accent-color: var(--data-default-color);
    border-color: var(--accent-color);
    .badge {
        background-color: var(--accent-color);
    }
}

[data-type].accent {
    color: var(--accent-color);
    input,
    select {
        border-color: var(--accent-color);
        ::placeholder {
            color: var(--accent-color);
        }
    }
    .badge {
        color: var(--color-text-dark-primary);
    }
    label {
        color: var(--accent-color);
    }
    &.border-accent {
        border-color: var(--accent-color);
    }
    [data-type="unlinked"] {
        --accent-color: var(--data-unlinked-color);
        + label {
            --accent-color: var(--data-unlinked-color);
        }
    }
}

.error {
    &::before {
        content: "âš ";
        color: var(--color-danger-base);
    }
}

[data-missing="true"] {
    &:hover {
        color: var(--color-warning-base);
    }
    color: var(--color-danger-base);

    button:disabled {
        opacity: 50%;
        &:hover {
            cursor: not-allowed;
        }
    }
}
