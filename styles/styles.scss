@use "colors" as *;
@import "_utility";
@import "_variables";
:root {
    //foundry colors
    // --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36) inset;
    --box-shadow: 1px 1px 3px 1px rgba(0, 0, 0, 0.36);
}
#slideshow-config {
    --flow-space: 1.25rem;
    .window-content {
        color: var(--color-text-primary);
        max-width: min(600px, 45vw);
        max-height: calc(100vh - 200px);
        .tile-list-item {
            > div {
                display: grid;
                grid-template-rows: repeat(3, 1fr);
                select {
                    height: var(--form-field-height);
                }
            }
            &.new {
                > label {
                    display: grid;
                    grid-template-rows: repeat(3, 1fr);
                }
            }
            // max-width: 90%;
        }
        li {
            background: hsla(0, 0%, 100%, 0.3);
        }
        li .actions {
            display: flex;
            align-items: center;
            border-left: 1px solid rgba(0, 0, 0, 0.15);
            flex: 0 0 50px;
            // height: 100%;
            justify-content: center;
            * + * {
                border-left: 1px solid rgba(0, 0, 0, 0.15);
            }
        }
        h1,
        h2,
        h3 {
            font-weight: bold;
        }
        input {
        }
    }
    // --color-text-primary: ;
}

.clickableImageContainer {
    &.JTCS {
        label {
            border: 2px solid var(--color-deep-purple-darkest);
            background-color: 2px solid var(--color-deep-purple-base);
            box-shadow: none;
        }
        label:not(:first-of-type, :last-of-type) {
            border-left: none;
            border-right: none;
        }
    }
    position: relative;
    .clickableImageControls {
        position: absolute;
        top: 0;
        left: 0;
        display: grid;
        width: fit-content;
        height: fit-content;
        grid-template-columns: minmax(20px, auto) minmax(0, 1fr);
        grid-template-rows: minmax(20px, auto) minmax(0, 1fr) minmax(0, 1fr);

        transition: opacity 100ms ease-in;
        pointer-events: none;
        // button,
        // input[type="radio"] + label {
        //     background: var(--foundry-dark-gray);
        //     box-shadow: 0 0 10px var(--color-shadow-dark);
        //     color: var(--color-text-light-heading);
        //     border: 1px solid var(--color-border-dark);
        //     cursor: pointer;
        //     pointer-events: all;
        //     &.active,
        //     &:hover {
        //         color: var(--color-text-light-highlight);
        //         border: 1px solid var(--color-border-highlight-alt);
        //         border-bottom: 1px solid var(--color-border-highlight);
        //         box-shadow: 0 0 10px var(--color-shadow-highlight);
        //     }
        // }
        &:hover {
            opacity: 100%;
        }
    }

    .displayLocations {
        gap: 0.5rem;
        * {
            pointer-events: auto;
        }
    }
    fieldset {
        box-shadow: var(--box-shadow);
        pointer-events: auto;
        * {
            pointer-events: auto;
        }
        legend {
            background-color: inherit;
            padding: 0.5rem;
        }

        grid-row: 1/2;
        grid-column: 2/4;
        display: flex;
        flex-direction: row;
        border: none;
        color: white;
        padding: 0rem 0rem;
        min-width: 50%;
        label:first-of-type {
            border-top-left-radius: 8px;
            border-bottom-left-radius: 8px;
        }
        label:last-of-type {
            border-top-right-radius: 8px;
            border-bottom-right-radius: 8px;
        }
    }
}

.clickableImage,
.rightClickableImage {
    border: 0px solid transparent;
    box-shadow: inset 0px 0px 2px transparent;
    transition: all 100ms ease-out;
    &:hover {
        border: 2px solid white;
        box-shadow: inset 2px 2px 8px rgba(50, 51, 59, 0.5);
        cursor: pointer;
        transition: all 100ms ease-out;
        & ~ .clickableImageControls {
            opacity: 100%;
            // pointer-events: auto;
        }
    }
    &:active {
        box-shadow: inset 4px 4px 16px rgba(50, 51, 59, 0.5);
    }
}

[data-type="art"] {
    --accent-color-hue: 240;
    --accent-color: hsl(var(--accent-color-hue), 100%, 50%);
}

[data-type="frame"] {
    --accent-color-hue: 0;
    --accent-color: hsl(var(--accent-color-hue), 100%, 50%);
}

[data-type].accent {
    color: var(--accent-color);
}

.error {
    &::before {
        content: "⚠";
        color: var(--color-danger-base);
    }
}

[data-missing="true"] {
    &:hover {
        cursor: not-allowed;
    }
    color: var(--color-danger-base);
    p:not(.error) {
        opacity: 50%;
        text-decoration: line-through;

        &::before {
            content: "⚠";
            text-decoration: none;
            color: var(--color-danger-base);
            margin-right: 1rem;
        }
    }
    button:disabled {
        opacity: 50%;
        &:hover {
            cursor: not-allowed;
        }
    }
}
